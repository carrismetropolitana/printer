version: '3.9'

volumes:
  certbotdata:
  queuedbdata:

services:
  #

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  watchtower:
    image: containrrr/watchtower
    restart: unless-stopped
    logging:
      options:
        max-size: '1m'
        max-file: '1'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_POLL_INTERVAL=10
      - WATCHTOWER_CLEANUP=TRUE
      - WATCHTOWER_INCLUDE_STOPPED=TRUE
      - WATCHTOWER_REVIVE_STOPPED=TRUE
      - WATCHTOWER_ROLLING_RESTART=TRUE

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  promtail:
    image: grafana/promtail
    restart: unless-stopped
    logging:
      options:
        max-size: '1m'
        max-file: '1'
    env_file:
      - ./.env
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers
      - ./promtail/docker-config.yml:/etc/promtail/docker-config.yml
    command: -config.expand-env=true -config.file=/etc/promtail/docker-config.yml

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  nginx:
    image: nginx:alpine-slim
    restart: unless-stopped
    logging:
      options:
        max-size: '1m'
        max-file: '1'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./letsencrypt:/etc/letsencrypt
      - certbotdata:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    logging:
      options:
        max-size: '1m'
        max-file: '1'
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - certbotdata:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  queuedb:
    image: mongo
    restart: unless-stopped
    logging:
      options:
        max-size: '1m'
        max-file: '1'
    volumes:
      - queuedbdata:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongodbuser
      - MONGO_INITDB_ROOT_PASSWORD=mongodbpassword

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  server:
    image: ghcr.io/carrismetropolitana/printer-server:production
    restart: unless-stopped
    logging:
      options:
        max-size: '1m'
        max-file: '1'
    volumes:
      - ./jobsdata:/app/jobsdata

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  worker:
    image: ghcr.io/carrismetropolitana/printer-worker:production
    restart: unless-stopped
    logging:
      options:
        max-size: '1m'
        max-file: '1'
    volumes:
      - ./jobsdata:/app/jobsdata

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  notifier:
    image: ghcr.io/carrismetropolitana/printer-notifier:production
    restart: unless-stopped
    logging:
      options:
        max-size: '1m'
        max-file: '1'
    env_file:
      - ./.env

  # # # # # # # # # # # # # # # # # # # # #
  # # # # # # # # # # # # # # # # # # # # #

  # manager:
  #   image: ghcr.io/carrismetropolitana/printer-manager:production
  #   restart: unless-stopped
  #   logging:
  #     options:
  #       max-size: '1m'
  #       max-file: '1'
  #   env_file:
  #     - ./.env
